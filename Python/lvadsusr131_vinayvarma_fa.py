# -*- coding: utf-8 -*-
"""LVADSUSR131-VinayVarma-FA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OVlCffyE8Q5XUHKcf4xFOmUZ3KnxAfbi
"""

#df.groupby('A').agg({'B': 'sum', 'C': 'mean'})

#1
import pandas as pd
data=pd.read_csv('/content/Walmart_Dataset Python_Final_Assessment.csv')
df=pd.DataFrame(data)
df
df.info()
df.describe()

#2
print("Number of Missing Values in given data set in each column are :")
print(df.isna().sum())
# we don't have any missing values to handle in the dataset so we cannot do any operations here.
#So that we can now proceed with the dataframe directly and make our own operations.

#3
#mean
sales_mean=df['Sales'].mean()
print("Average of total sales is : ",sales_mean)
quantity_mean=df['Quantity'].mean()
print("Average of total quantity is : ",quantity_mean)
profit_mean=df['Profit'].mean()
print("Average of total profit is : ",profit_mean)
#median
sales_median=df['Sales'].median()
print("Median of total sales is : ",sales_median)
quantity_median=df['Quantity'].median()
print("Median of total quantity is : ",quantity_median)
profit_median=df['Profit'].median()
print("Median of total profit is : ",profit_median)
#variance
sales_var=df['Sales'].var()
print("Variance of total sales is : ",sales_var)
quantity_var=df['Quantity'].var()
print("Variance of total quantity is : ",quantity_var)
profit_var=df['Profit'].var()
print("Variance of total profit is : ",profit_var)
#standard deviation
sales_std=df['Sales'].std()
print("Standard Deviation of total sales is : ",sales_std)
quantity_std=df['Quantity'].std()
print("Standard Deviation of total quantity is : ",quantity_std)
profit_std=df['Profit'].std()
print("Standard Deviation of total profit is : ",profit_std)
sales_range=df['Sales'].max()-df['Sales'].min()
print("Range of total sales is : ",round(sales_range)+1)
quantity_range=df['Quantity'].max()-df['Quantity'].min()
print("Range of total quantity is : ",round(quantity_mean))
profit_range=df['Profit'].max()-df['Profit'].min()
print("Range of total profit is : ",round(profit_range)+1)
#mode mainly used for categorical values
quantity_mode=df['Quantity'].mode()
print("The mode of quantity is:",quantity_mode)
category_mode=df['Category'].mode()
print("The mode of Category is:",category_mode)

#4
import matplotlib.pyplot as plt
import seaborn as sns
a=df.groupby(df['Category']).agg({"Category":'count'})
plt.figure(figsize=(10,6))
plt.pie(a['Category'],labels=a['Category'])
plt.title("Pie Chart")
plt.legend()
plt.show()

plt.bar(df['Category'], df['Profit'])
plt.xlabel('Category')
plt.ylabel('Profit')
plt.title('Scatter plot')
plt.xticks(rotation=90)
plt.show()

plt.figure(figsize=(10,6))
plt.boxplot(df['Quantity'])
plt.title('Box plot')
plt.show()

plt.figure(figsize=(10,6))
plt.scatter(df['Order Date'], df['Quantity'])
plt.xlabel('Order Date')
plt.ylabel('Profit')
plt.title('Scatter plot')
plt.show()

#5
print("Correlation Between the Variables is :")
print(df.corr())

#6
import pandas as pd
import matplotlib.pyplot as plt
plt.scatter(df['Order Date'], df['Profit'])
plt.xlabel('Order Date')
plt.ylabel('Profit')
plt.title('Scatter plot')
plt.show()

plt.figure(figsize=(10,6))
plt.boxplot(df['Quantity'])
plt.title('Box plot')
plt.show()

plt.figure(figsize=(10,6))
df.boxplot()
plt.title('Box plot')
plt.show()
plt.figure(figsize=(10, 6))

#7
#Trend Analysis
#1
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Order Date'] = df['Order Date'].dt.year
year_data = df.groupby('Order Date').agg({'Sales': 'sum', 'Profit': 'sum'}).reset_index()
plt.figure(figsize=(10, 6))
sns.lineplot(data=year_data, x='Order Date', y='Sales', marker='o', label='Sales')
sns.lineplot(data=year_data, x='Order Date', y='Profit', marker='s', label='Profit')
plt.title('Sales and Profits Over the Years')
plt.xlabel('Year')
plt.ylabel('Amount')
plt.legend()
plt.grid(True)
plt.show()

#7
#Trend Analysis
#2
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Order Date'] = df['Order Date'].dt.year
yearly_category_sales = df.groupby(['Order Date', 'Category'])['Sales'].sum().reset_index()
pivot_table = yearly_category_sales.pivot(index='Order Date', columns='Category', values='Sales')
growth_rate = pivot_table.pct_change(axis='rows') * 100
growth_total = growth_rate.sum()
growing_category = growth_total.idxmax()
print("Product category that has shown the most growth in terms of sales over the years:", growing_category)

#7
#Customer Analysis
#1
import pandas as pd
customers = df.groupby('Order ID').agg({ 'Sales': 'sum'}).reset_index()
customers.columns = [ 'Number_of_Orders', 'Total_Sales']
top_customers_by_orders = customers.sort_values(by='Number_of_Orders', ascending=False).head(5)
top_customers_by_sales = customers.sort_values(by='Total_Sales', ascending=False).head(5)
print("Top 5 Orders based on orders:")
print(top_customers_by_orders)
print()
print("Top 5 Orders based on sales:")
print(top_customers_by_sales)

#7
#Customer Analysis
#2
import pandas as pd
customers = df.groupby('EmailID').agg({'Order ID': 'count', 'Sales': 'sum'})
customers_sorted = customers.sort_values(by=['Order ID', 'Sales'], ascending=False)
top_5 = customers_sorted.head(5)
print(top_5)
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Time Difference'] = df.groupby('EmailID')['Order Date'].diff()
avg_time = df.groupby('EmailID')['Time Difference'].mean()
print(avg_time)

#7
#Comprehensive analysis
#1
#strategies implemented to optimize the supply chain based on insights to optimize supply chain.
#PROPER PLANNING need to be done
#SOURCING OF DATAfrom various platforms.
#PRODUCTION should be controlled based on need.
#DISTRIBUTION should be done accordingly.
#TRANSPORTATION must be done early based on the products.


#2
#Underlying factors contribute to the geographic distribution of sales and how can these insights inform targeted marketing strategies.
#SHIPMENT_DATE can impact that means transportation delay.
#CLIMATE,TRANSPORTATION AND POPULATION CAN IMPACT.
#Factors such as climate and population can impact geographic Distribution.
#Geographical distribution is an important tool for businesses to understand their customers
#which helps them create targeted marketing campaigns.
#shipment should be as earlier as possible.

#3
#Can you identify patterns or predictors of high-value customers,how can we leverage the information to enhance customer loyalty and acquisition startegies
#By analyzing previous data, businesses can identify PATTERNS AND TRENDS.
#to anticipate customers future NEEDS AND PREFERENCES.
#For example, awebsite can utilize analytics to estimate when customers are less likely to purchase from their website.